<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>servicenow on Cloud and Automation</title>
    <link>https://cloudautomation.pharriso.co.uk/tags/servicenow/</link>
    <description>Recent content in servicenow on Cloud and Automation</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 May 2023 14:46:42 +0100</lastBuildDate><atom:link href="https://cloudautomation.pharriso.co.uk/tags/servicenow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using the ServiceNow Ansible Spoke</title>
      <link>https://cloudautomation.pharriso.co.uk/post/aap_snow_spoke/</link>
      <pubDate>Wed, 03 May 2023 14:46:42 +0100</pubDate>
      
      <guid>https://cloudautomation.pharriso.co.uk/post/aap_snow_spoke/</guid>
      <description>Nearly four years ago, I wrote a post a on how to configure ServiceNow to call the Ansible Automation platform . In that post, I made use of outbound REST API calls in ServiceNow along with worfklows. The ServiceNow Ansible Spoke gives customers another method for integrating ServiceNow with Ansible Automation Platform. The Ansible Spoke provides some out of the box integrations with automation controller (formally Ansible Tower) to streamline the integration process.</description>
    </item>
    
    <item>
      <title>Call Ansible Tower from ServiceNow</title>
      <link>https://cloudautomation.pharriso.co.uk/post/snow-call-tower/</link>
      <pubDate>Mon, 05 Aug 2019 11:49:05 +0100</pubDate>
      
      <guid>https://cloudautomation.pharriso.co.uk/post/snow-call-tower/</guid>
      <description>In this post we will look at how we can call Ansible Tower from ServiceNow as part of a ServiceNow Catalog Request. For this example, I have a playbook in Ansible Tower that will manage the membership of a node within an F5 loadbalancer pool. The playbook expects the user to input the name of the node that should be managed and the state it should be in - either enabled or forced_offline.</description>
    </item>
    
  </channel>
</rss>
