<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud and Automation</title>
    <link>https://cloudautomation2.pharriso.co.uk/</link>
    <description>Recent content on Cloud and Automation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2020 17:41:05 +0100</lastBuildDate>
    
	<atom:link href="https://cloudautomation2.pharriso.co.uk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible Tower Dynamic Inventories - Manage Enabled Hosts</title>
      <link>https://cloudautomation2.pharriso.co.uk/post/tower-enabled-hosts/</link>
      <pubDate>Mon, 10 Feb 2020 17:41:05 +0100</pubDate>
      
      <guid>https://cloudautomation2.pharriso.co.uk/post/tower-enabled-hosts/</guid>
      <description>If you have used dynamic inventories in Ansible Tower before, you may have noticed that it adds some logic to determine whether a host should be enabled for job execution or not. For example, when syncing with our Red Hat Virtualisation environment, it has set some of our hosts to disabled.
Why do we get this behaviour? In the case of Red Hat Virtualisation you can probably tell from the screen shot - Tower will disable any VM&amp;rsquo;s which are powered off and we can see the VM&amp;rsquo;s which are disabled show a state of &amp;ldquo;status_down&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Ansible Constructed Inventory Plugin</title>
      <link>https://cloudautomation2.pharriso.co.uk/post/ansible-constructed-inventory-plugin/</link>
      <pubDate>Thu, 16 Jan 2020 09:40:51 +0100</pubDate>
      
      <guid>https://cloudautomation2.pharriso.co.uk/post/ansible-constructed-inventory-plugin/</guid>
      <description>In this blog post we will look at how we can easily enrich an existing dynamic inventory using the constructed inventory plugin. But, before we do that, let&amp;rsquo;s take a step back.
Ansible is simple automation tool that allows users to achieve common use cases such as configuration management, provisioning and complex multi-tier orchestration. Part of what makes Ansible so simple, is the fact that it is agentless. One doesn&amp;rsquo;t need to deploy agents or any heavyweight control software to get up and running with Ansible automation.</description>
    </item>
    
    <item>
      <title>Scaling Ansible Tower - Job slicing</title>
      <link>https://cloudautomation2.pharriso.co.uk/post/tower-job-slice/</link>
      <pubDate>Wed, 17 Apr 2019 19:16:18 +0100</pubDate>
      
      <guid>https://cloudautomation2.pharriso.co.uk/post/tower-job-slice/</guid>
      <description>Ansible Tower is a centralised platform for running and controlling your Ansible automation. It provides a number of key features for running Ansible in the enterprise.
 Role-Based Access Control Inventory Management Credential Management Auditing &amp;amp; Logging Clustering &amp;amp; Scale-Out  Job slicing is a new scale-out feature that was introduced in Ansible Tower 3.4 which allows us to run jobs that are distributed across our Ansible Tower cluster. Before we look at job slicing let&amp;rsquo;s quickly look at clustering and job distribution within a cluster.</description>
    </item>
    
    <item>
      <title>Infrastructure Migration Solution</title>
      <link>https://cloudautomation2.pharriso.co.uk/post/ims/</link>
      <pubDate>Wed, 09 Jan 2019 19:47:46 +0100</pubDate>
      
      <guid>https://cloudautomation2.pharriso.co.uk/post/ims/</guid>
      <description>While VMware is undoubtedly a great virtualisation offering (I spent a number of users working with VMware tech) some customers are looking beyond traditional virtualisation. The growing adoption of containerisation is a great example of this and using RHV as a stepping stone to Container Native Virtualisation (CNV) is a good example use case.
Other customers simply want to save costs and are looking at alternative virtualisation offerings. Whatever the reason for moving from VMware, we need a method for migrating workloads to RHV.</description>
    </item>
    
  </channel>
</rss>